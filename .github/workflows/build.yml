name: Docker
on: [push]
env:
  KERNEL_VERSION: 5.5.19-ctsi-6
jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            docker.io/${{ github.repository_owner }}/toolchain
            ghcr.io/${{ github.repository_owner }}/toolchain
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download linux
        run: >
          gh release download -R cartesi/linux v${{ env.KERNEL_VERSION }} --archive=tar.gz
        env:
          GH_TOKEN: ${{ github.token }}

      - uses: depot/setup-action@v1
      - name: Build and push docker image
        id: docker_build
        uses: depot/build-push-action@v1
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker_meta.outputs.tags }}
          push: ${{ startsWith(github.ref, 'refs/tags/v') || (github.ref == 'refs/heads/develop') }}
          build-args: |
            KERNEL_VERSION=${{ env.KERNEL_VERSION }}
          project: ${{ vars.DEPOT_PROJECT }}
          token: ${{ secrets.DEPOT_TOKEN }}

  # Create a separate job for fd-emulation to speed up the process
  build-fd-emulation:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            docker.io/${{ github.repository_owner }}/toolchain
            ghcr.io/${{ github.repository_owner }}/toolchain
          flavor: |
            latest=false
            suffix=-fd-emulation
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download linux
        run: >
          gh release download -R cartesi/linux v${{ env.KERNEL_VERSION }} --archive=tar.gz
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            TOOLCHAIN_CONFIG=configs/ct-ng-config-lp64d
            KERNEL_VERSION=${{ env.KERNEL_VERSION }}
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}
          push: false
          # do not push fd images for now
          # push: ${{ startsWith(github.ref, 'refs/tags/v') || (github.ref == 'refs/heads/develop') }}
